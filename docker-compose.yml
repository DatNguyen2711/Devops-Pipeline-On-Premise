version: "3.8"

services:
  back-end:
    image: back-end:v1
    build:
      context: ./Medicine-Web
      dockerfile: Dockerfile
    container_name: back-end
    restart: always
    depends_on:
      - db
    networks:
      - db-network
      - app-network
    ports:
      - "8080:8080"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  front-end:
    image: front-end:v1
    build:
      context: ./Medicine-Web-FE
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8900:80"
    depends_on:
      - back-end
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8900 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: database:v1
    build:
      context: ./Database
      dockerfile: Dockerfile.Database
    container_name: db
    restart: always
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
      - ACCEPT_EULA=${ACCEPT_EULA}
    volumes:
      - db_data:/var/opt/mssql/data
    ports:
      - "1433:1433"
    networks:
      - db-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "chmod +x /dbconfig/health_check.sh & ./dbconfig/health_check.sh",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

# docker exec -it db /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P DatLaid234555@Xy
networks:
  db-network:
    driver: bridge
    name: db-network
  app-network:
    driver: bridge
    name: app-network
